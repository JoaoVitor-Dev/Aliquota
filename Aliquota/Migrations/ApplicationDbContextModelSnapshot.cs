// <auto-generated />
using System;
using Aliquota.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aliquota.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Aliquota.Entity.Aplicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAplicacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FundoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FundoId");

                    b.ToTable("Aplicacoes");
                });

            modelBuilder.Entity("Aliquota.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "João"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Maria"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "José"
                        });
                });

            modelBuilder.Entity("Aliquota.Entity.Fundo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Fundos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fundo de Investimento A"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fundo de Investimento B"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Fundo de Investimento C"
                        });
                });

            modelBuilder.Entity("Aliquota.Entity.Resgate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataResgate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FundoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ImpostoDeRenda")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FundoId");

                    b.ToTable("Resgates");
                });

            modelBuilder.Entity("Aliquota.Entity.Aplicacao", b =>
                {
                    b.HasOne("Aliquota.Entity.Cliente", "Cliente")
                        .WithMany("Aplicacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aliquota.Entity.Fundo", "Fundo")
                        .WithMany("Aplicacoes")
                        .HasForeignKey("FundoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fundo");
                });

            modelBuilder.Entity("Aliquota.Entity.Resgate", b =>
                {
                    b.HasOne("Aliquota.Entity.Cliente", "Cliente")
                        .WithMany("Resgates")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aliquota.Entity.Fundo", "Fundo")
                        .WithMany("Resgates")
                        .HasForeignKey("FundoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fundo");
                });

            modelBuilder.Entity("Aliquota.Entity.Cliente", b =>
                {
                    b.Navigation("Aplicacoes");

                    b.Navigation("Resgates");
                });

            modelBuilder.Entity("Aliquota.Entity.Fundo", b =>
                {
                    b.Navigation("Aplicacoes");

                    b.Navigation("Resgates");
                });
#pragma warning restore 612, 618
        }
    }
}
